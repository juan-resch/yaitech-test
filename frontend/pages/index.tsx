import Head from 'next/head'
import { Input } from '../components/Input'
import { Button } from '@/components/ui/button'
import { useState } from 'react'
import { useRouter } from 'next/router'
import { $infra } from '@/requests/infra'
import { Toaster, toast } from 'sonner'
export default function Home() {
  const [name, setName] = useState('')
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [isSignUp, setIsSignUp] = useState(false)
  const router = useRouter()

  const handleSignIn = async () => {
    const result = await $infra.auth.signIn({ password, username })
    if (!result.success) {
      return toast('Verifique seus dados', { description: result.error })
    }

    router.push('/books')
  }
  const handleSignUp = async () => {
    if (username.length < 8)
      return toast('Verifique seus dados', {
        description: 'Usuário deve conter pelo menos 8 caracteres',
      })

    if (password.length < 8)
      return toast('Verifique seus dados', {
        description: 'Senha deve conter pelo menos 8 caracteres',
      })

    if (name.length < 3)
      return toast('Verifique seus dados', {
        description: 'Seu nome é muito curto',
      })

    const result = await $infra.auth.register({ password, username, name })

    if (result.error) {
      return toast('Verifique seus dados', { description: result.error })
    }

    toast('Sucesso', { description: 'Bem vindo ' + name })

    setIsSignUp(false)
  }

  return (
    <>
      <Head>
        <title>Yaitech test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex w-screen min-h-screen bg-gradient-to-br from-amber-50 via-zinc-200 to-purple-200 items-center justify-center">
        <Toaster />
        <div className="flex flex-col items-center p-8 bg-white rounded-md shadow-md w-[520px] gap-4">
          <span className="text-4xl font-bold">{isSignUp ? 'Cadastrar' : 'Entrar'}</span>
          <div className="flex flex-col gap-2 w-full">
            {isSignUp && <Input value={name} onChange={setName} placeholder="Nome" />}
            <Input value={username} onChange={setUsername} placeholder="Usuário" />
            <Input value={password} onChange={setPassword} placeholder="Senha" secure />
            {!isSignUp && <Button onClick={handleSignIn}>Entrar</Button>}
            {isSignUp && (
              <Button
                onClick={() => {
                  setIsSignUp(false)
                }}
              >
                Voltar
              </Button>
            )}
            <Button
              onClick={() => {
                if (isSignUp) handleSignUp()
                else {
                  setIsSignUp(true)
                }
              }}
              variant={'ghost'}
            >
              Criar conta
            </Button>
          </div>
        </div>
      </main>
    </>
  )
}
